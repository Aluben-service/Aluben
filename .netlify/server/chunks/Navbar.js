import { c as create_ssr_component } from "./ssr.js";
import "sweetalert2";
const css = {
  code: ".button.svelte-12t30cu{background-color:#0b0724;color:floralwhite;border:1px dotted rgb(43, 207, 21);border-radius:5px;padding:2px 4px;margin:5px;cursor:pointer}.button.svelte-12t30cu:hover{transition:1000ms;padding:2px 8px;transform:translateY(-0px);background-color:#0b0724;color:floralwhite;border:solid 3px rgb(252, 245, 115)}.navbar.svelte-12t30cu{color:rgb(255, 255, 255);background-color:rgb(36, 36, 36);text-align:center;left:0%;position:fixed;width:100%;top:0px;z-index:1000}",
  map: '{"version":3,"file":"Navbar.svelte","sources":["Navbar.svelte"],"sourcesContent":["<script>\\n\\timport Swal from \\"../utils/sweetAlerts.js\\"; // Adjust the path as needed\\n\\n\\tconst Byblk = () => open(\\"./byeblock\\", \\"_self\\");\\n\\tconst games = () => open(\\"/games\\", \\"_self\\");\\n\\tconst settings = () => open(\\"/settings\\", \\"_self\\");\\n\\tconst home = () => open(\\"/\\", \\"_self\\");\\n\\tconst calculator = async () => {\\n\\t\\t// Prompt the user for input using SweetAlert2\\n\\t\\tconst { value: calculation } = await Swal.fire({\\n\\t\\t\\ttitle: \\"Enter a calculation\\",\\n\\t\\t\\tinput: \\"text\\",\\n\\t\\t\\tinputLabel:\\n\\t\\t\\t\\t\\"Calculation (only +, -, *, /, whatever else will be ignored):\\",\\n\\t\\t\\tinputPlaceholder: \\"e.g., 3 + 5 * (2 - 8)\\",\\n\\t\\t\\tshowCancelButton: true,\\n\\t\\t\\tconfirmButtonText: \\"Calculate\\",\\n\\t\\t\\tcancelButtonText: \\"Cancel\\",\\n\\t\\t});\\n\\n\\t\\t// Check if the user pressed \\"Cancel\\" or entered nothing\\n\\t\\tif (calculation !== null && calculation.trim() !== \\"\\") {\\n\\t\\t\\t// Sanitize the input\\n\\t\\t\\tconst sanitizedCalculation = calculation.replace(\\n\\t\\t\\t\\t/[^-()\\\\d/*+.]/g,\\n\\t\\t\\t\\t\\"\\",\\n\\t\\t\\t);\\n\\n\\t\\t\\t// Perform the calculation\\n\\t\\t\\ttry {\\n\\t\\t\\t\\t// Use Function constructor safely\\n\\t\\t\\t\\tconst result = Function(\\n\\t\\t\\t\\t\\t\'\\"use strict\\"; return (\' + sanitizedCalculation + \\")\\",\\n\\t\\t\\t\\t)();\\n\\t\\t\\t\\t// Show the result using SweetAlert2\\n\\t\\t\\t\\tawait Swal.fire({\\n\\t\\t\\t\\t\\ttitle: \\"Result\\",\\n\\t\\t\\t\\t\\ttext: `The result is: ${result}`,\\n\\t\\t\\t\\t\\ticon: \\"info\\",\\n\\t\\t\\t\\t\\tconfirmButtonText: \\"OK\\",\\n\\t\\t\\t\\t});\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t// Handle any errors\\n\\t\\t\\t\\tawait Swal.fire({\\n\\t\\t\\t\\t\\ttitle: \\"Error\\",\\n\\t\\t\\t\\t\\ttext: \\"There was an error with the calculation.\\",\\n\\t\\t\\t\\t\\ticon: \\"error\\",\\n\\t\\t\\t\\t\\tconfirmButtonText: \\"OK\\",\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n<\/script>\\n\\n<div class=\\"navbar\\" id=\\"navbar\\">\\n\\t<button class=\\"button\\" type=\\"button\\" on:click={() => home()}>Home</button>\\n\\t<button class=\\"button\\" type=\\"button\\" on:click={() => calculator()}\\n\\t\\t>Calculator</button\\n\\t>\\n\\t<button class=\\"button\\" type=\\"button\\" on:click={() => Byblk()}\\n\\t\\t>Byeblocker</button\\n\\t>\\n\\t<button class=\\"button\\" type=\\"button\\" on:click={() => games()}\\n\\t\\t>Games</button\\n\\t>\\n\\t<button class=\\"button\\" type=\\"button\\" on:click={() => settings()}\\n\\t\\t>Settings</button\\n\\t>\\n</div>\\n\\n<style>\\n\\t.button {\\n\\t\\tbackground-color: #0b0724;\\n\\t\\tcolor: floralwhite;\\n\\t\\tborder: 1px dotted rgb(43, 207, 21);\\n\\t\\tborder-radius: 5px;\\n\\t\\tpadding: 2px 4px;\\n\\t\\tmargin: 5px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.button:hover {\\n\\t\\ttransition: 1000ms;\\n\\t\\tpadding: 2px 8px;\\n\\t\\ttransform: translateY(-0px);\\n\\t\\tbackground-color: #0b0724;\\n\\t\\tcolor: floralwhite;\\n\\t\\tborder: solid 3px rgb(252, 245, 115);\\n\\t}\\n\\t.navbar {\\n\\t\\tcolor: rgb(255, 255, 255);\\n\\t\\tbackground-color: rgb(36, 36, 36);\\n\\t\\ttext-align: center;\\n\\t\\tleft: 0%;\\n\\t\\tposition: fixed;\\n\\t\\twidth: 100%;\\n\\t\\ttop: 0px;\\n\\t\\tz-index: 1000;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAuEC,sBAAQ,CACP,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,WAAW,CAClB,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACnC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,OACT,CAEA,sBAAO,MAAO,CACb,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,WAAW,CAClB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACpC,CACA,sBAAQ,CACP,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACjC,UAAU,CAAE,MAAM,CAClB,IAAI,CAAE,EAAE,CACR,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,CACR,OAAO,CAAE,IACV"}'
};
const Navbar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<div class="navbar svelte-12t30cu" id="navbar"><button class="button svelte-12t30cu" type="button" data-svelte-h="svelte-irlegn">Home</button> <button class="button svelte-12t30cu" type="button" data-svelte-h="svelte-egmw3u">Calculator</button> <button class="button svelte-12t30cu" type="button" data-svelte-h="svelte-164hc0m">Byeblocker</button> <button class="button svelte-12t30cu" type="button" data-svelte-h="svelte-7t87vy">Games</button> <button class="button svelte-12t30cu" type="button" data-svelte-h="svelte-1ak5y9o">Settings</button> </div>`;
});
export {
  Navbar as N
};
